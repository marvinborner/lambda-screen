:import std/Combinator .
:import std/Math .

# depth → dist → screen
# upper left quadrant
# split y [[[fixOr [0 (3 ++2 ++(++1)) (3 ++2 ++1) (3 ++2 ++1) (3 ++2 1)]]]]
# 	fixOr 0 >? (+5) [[1]]

# depth → x → y → screen
# upper right quadrant
split y [[[[fixOr [0 (4 ++3 --(2 ⋅ (+2)) (1 ⋅ (+2))) (4 ++3 (2 ⋅ (+2)) (1 ⋅ (+2))) (4 ++3 --(2 ⋅ (+2)) --(1 ⋅ (+2))) (4 ++3 (2 ⋅ (+2)) --(1 ⋅ (+2)))]]]]]
	fixOr (sqrt ((1 ** (+2)) + (0 ** (+2)))) >? ((+4) ** 2) [[0]]

main [split (+0) (+1) (+1)]

# y = \(\(0 0) \(1 (0 0)))
# split = (y \\\\(gt (sqrt (add (pow 1 <2>) (pow 0 <2>))) <50> \\0 \(0 (4 (inc 3) (dec (mul 2 <2>)) (mul 1 <2>)) (4 (inc 3) (mul 2 <2>) (mul 1 <2>)) (4 (inc 3) (dec (mul 2 <2>)) (dec (mul 1 <2>))) (4 (inc 3) (mul 2 <2>) (dec (mul 1 <2>))))))
# \(split <0> <1> <1>)
